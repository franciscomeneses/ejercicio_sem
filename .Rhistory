)
ld<- standardizedsolution(mod_conf_cfa) %>% select(lhs,op,rhs,est.std) %>% filter(op=="=~")
ld$est.std<- sprintf("%.2f", ld$est.std)
#install.packages("draw")
library(draw) #para hacer rectangulo de fit
size <- 10
drawText(x = 3, y = 5.5, text = paste0("Estimator: DWLS", "; N=  ",nobs(mod_conf_cfa), "; chi^2(df) = ",fm03[1,],"(",fm03[2,],")","; p= ",fm03[5,],"; CFI=",fm03[3,],"; RMSEA=",fm03[4,]),family = "serif",size = 10)
drawExport("ajuste2.png",units = "cm",width = 18,height = 15,ppi = 300)
library(sjPlot)
library(dplyr)
library(lavaan)
library(semPlot)
library(stargazer)
library(corrplot)
library(psych)
library(knitr)
library(kableExtra)
library(rvest)
library(sjlabelled)
library(ggplot2)
fm03<- data.frame(v1=fitmeasures(mod_conf_cfa, output ="matrix")[c("chisq","df","cfi","rmsea","pvalue"),])
fm03 <- round(fm03,3)
par(mai = c(2,2,2,2)) # Set the margin on all sides to 2
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 6
layout(matrix(c(1, # semPlot
1, # semPlot
1,
1,
1,
2),# ajuste
nrow=6,
byrow=TRUE))
# Crear el diagrama semPath
semPaths(
mod_conf_cfa,           # Modelo de análisis factorial confirmatorio a visualizar
whatLabels = "std",     # Etiquetas de valores estandarizados
label.cex = 1,        # Tamaño de las etiquetas dentro de los nodos
edge.label.cex = 1.2,   # Tamaño de los valores estimados en las flechas
residuals = F,       # Mostrar residuos
optimizeLatRes = FALSE, # Optimizar los residuos de factores latentes
edge.color = "black",   # Color de las flechas
style = "lisrel",       # Estilo del diagrama (por ejemplo, LISREL)
nCharNodes = 0,         # Número de caracteres en los nodos (0 para auto)
curvePivot = FALSE,     # Curvar las flechas de acuerdo a las cargas
curve = 1.5,            # Curvatura de las flechas (ajustable)
rotation = 2,           # Rotación del diagrama
layout = "tree",       # Diseño del diagrama
cardinal = "lat cov",   # Información sobre cardinalidad y covarianzas
legend.cex = 0.6,       # Tamaño de la leyenda
label.cex = 0.8,          # Tamaño de etiquetas
label.font = 6,         # Fuente de etiquetas
edge.label.font = 13,   # Fuente de etiquetas en las flechas
asize = 3,              # Tamaño de las flechas
edge.width = 1.2,       # Ancho de las flechas
sizeMan = 2,            # Tamaño de las cajas de variables observadas (largo)
sizeMan2 = 1,           # Tamaño de las cajas de variables observadas (alto)
sizeLat = 2,          # Tamaño de los elipses de factores latentes (largo)
sizeLat2 = 1,          # Tamaño de los elipses de factores latentes (alto)
residScale = 1,        # Escala de los residuos
width = 3,           # Ancho del diagrama
height = 3,            # Alto del diagrama
intercepts = FALSE,     # Mostrar interceptos
reorder = F,         # Reorganizar los nodos
thresholds = FALSE,     # Mostrar umbrales
fixedStyle = 1,         # Estilo fijo
node.height = 4,        # Altura de los nodos (ajustable para aumentar la separación vertical)
node.width = 4,         # Ancho de los nodos
label.scale = T,    # Escala de etiquetas
shapeMan = "rectangle", # Forma de las cajas de variables observadas
shapeLat = "ellipse",   # Forma de los elipses de factores latentes
details = TRUE          # Mostrar detalles en el diagrama
)
ld<- standardizedsolution(mod_conf_cfa) %>% select(lhs,op,rhs,est.std) %>% filter(op=="=~")
ld$est.std<- sprintf("%.2f", ld$est.std)
#install.packages("draw")
library(draw) #para hacer rectangulo de fit
size <- 10
drawText(x = 3, y = 5.5, text = paste0("Estimator: DWLS", "; N=  ",nobs(mod_conf_cfa), "; chi^2(df) = ",fm03[1,],"(",fm03[2,],")","; p= ",fm03[5,],"; CFI=",fm03[3,],"; RMSEA=",fm03[4,]),family = "serif",size = 10)
drawExport("ajuste2.png",units = "cm",width = 18,height = 15,ppi = 300)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
PPC ~ CA
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
PPC ~ AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
AC ~ PPC
PPC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
library(sjPlot)
library(dplyr)
library(lavaan)
library(semPlot)
library(stargazer)
library(corrplot)
library(psych)
library(knitr)
library(kableExtra)
library(rvest)
library(sjlabelled)
library(ggplot2)
fm03<- data.frame(v1=fitmeasures(mod_conf_cfa, output ="matrix")[c("chisq","df","cfi","rmsea","pvalue"),])
fm03 <- round(fm03,3)
par(mai = c(2,2,2,2)) # Set the margin on all sides to 2
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 6
layout(matrix(c(1, # semPlot
1, # semPlot
1,
1,
1,
2),# ajuste
nrow=6,
byrow=TRUE))
# Crear el diagrama semPath
semPaths(
mod_conf_cfa,           # Modelo de análisis factorial confirmatorio a visualizar
whatLabels = "std",     # Etiquetas de valores estandarizados
label.cex = 1,        # Tamaño de las etiquetas dentro de los nodos
edge.label.cex = 1.2,   # Tamaño de los valores estimados en las flechas
residuals = F,       # Mostrar residuos
optimizeLatRes = FALSE, # Optimizar los residuos de factores latentes
edge.color = "black",   # Color de las flechas
style = "lisrel",       # Estilo del diagrama (por ejemplo, LISREL)
nCharNodes = 0,         # Número de caracteres en los nodos (0 para auto)
curvePivot = FALSE,     # Curvar las flechas de acuerdo a las cargas
curve = 1.5,            # Curvatura de las flechas (ajustable)
rotation = 2,           # Rotación del diagrama
layout = "tree",       # Diseño del diagrama
cardinal = "lat cov",   # Información sobre cardinalidad y covarianzas
legend.cex = 0.6,       # Tamaño de la leyenda
label.cex = 0.8,          # Tamaño de etiquetas
label.font = 6,         # Fuente de etiquetas
edge.label.font = 13,   # Fuente de etiquetas en las flechas
asize = 3,              # Tamaño de las flechas
edge.width = 1.2,       # Ancho de las flechas
sizeMan = 2,            # Tamaño de las cajas de variables observadas (largo)
sizeMan2 = 1,           # Tamaño de las cajas de variables observadas (alto)
sizeLat = 2,          # Tamaño de los elipses de factores latentes (largo)
sizeLat2 = 1,          # Tamaño de los elipses de factores latentes (alto)
residScale = 1,        # Escala de los residuos
width = 3,           # Ancho del diagrama
height = 3,            # Alto del diagrama
intercepts = FALSE,     # Mostrar interceptos
reorder = F,         # Reorganizar los nodos
thresholds = FALSE,     # Mostrar umbrales
fixedStyle = 1,         # Estilo fijo
node.height = 4,        # Altura de los nodos (ajustable para aumentar la separación vertical)
node.width = 4,         # Ancho de los nodos
label.scale = T,    # Escala de etiquetas
shapeMan = "rectangle", # Forma de las cajas de variables observadas
shapeLat = "ellipse",   # Forma de los elipses de factores latentes
details = TRUE          # Mostrar detalles en el diagrama
)
ld<- standardizedsolution(mod_conf_cfa) %>% select(lhs,op,rhs,est.std) %>% filter(op=="=~")
ld$est.std<- sprintf("%.2f", ld$est.std)
#install.packages("draw")
library(draw) #para hacer rectangulo de fit
size <- 10
drawText(x = 3, y = 5.5, text = paste0("Estimator: DWLS", "; N=  ",nobs(mod_conf_cfa), "; chi^2(df) = ",fm03[1,],"(",fm03[2,],")","; p= ",fm03[5,],"; CFI=",fm03[3,],"; RMSEA=",fm03[4,]),family = "serif",size = 10)
drawExport("ajuste2.png",units = "cm",width = 18,height = 15,ppi = 300)
modelo_liderazgo <- '
AC =~ p_58 + p_59 + p_60 + p_61 + p_62
PPC =~ p_69 + p_70 + p_71 + p_72 + p_73
CA =~  p_77 + p_78 + p_79 + p_80 + p_81
CR = ~ p_83 + p_84 + p_85 + p_86 + p_87
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo %>% na.omit())
bbdd_liderazgo
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
bbdd_liderazgo_rec= bbdd_liderazgo %>% select(p_58:p_87)
bbdd_liderazgo_rec
modelo_liderazgo <- '
AC =~ p_58 + p_59 + p_60 + p_61 + p_62
PPC =~ p_69 + p_70 + p_71 + p_72 + p_73
CA =~  p_77 + p_78 + p_79 + p_80 + p_81
CR = ~ p_83 + p_84 + p_85 + p_86 + p_87
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo %>% na.omit())
modelo_liderazgo <- '
AC =~ p_58 + p_59 + p_60 + p_61 + p_62
PPC =~ p_69 + p_70 + p_71 + p_72 + p_73
CA =~  p_77 + p_78 + p_79 + p_80 + p_81
CR = ~ p_83 + p_84 + p_85 + p_86 + p_87
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_rec %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
library(sjPlot)
library(dplyr)
library(lavaan)
library(semPlot)
library(stargazer)
library(corrplot)
library(psych)
library(knitr)
library(kableExtra)
library(rvest)
library(sjlabelled)
library(ggplot2)
fm03<- data.frame(v1=fitmeasures(mod_conf_cfa, output ="matrix")[c("chisq","df","cfi","rmsea","pvalue"),])
fm03 <- round(fm03,3)
par(mai = c(2,2,2,2)) # Set the margin on all sides to 2
par(mar = c(5, 5, 5, 5)) # Set the margin on all sides to 6
layout(matrix(c(1, # semPlot
1, # semPlot
1,
1,
1,
2),# ajuste
nrow=6,
byrow=TRUE))
# Crear el diagrama semPath
semPaths(
mod_conf_cfa,           # Modelo de análisis factorial confirmatorio a visualizar
whatLabels = "std",     # Etiquetas de valores estandarizados
label.cex = 1,        # Tamaño de las etiquetas dentro de los nodos
edge.label.cex = 1.2,   # Tamaño de los valores estimados en las flechas
residuals = F,       # Mostrar residuos
optimizeLatRes = FALSE, # Optimizar los residuos de factores latentes
edge.color = "black",   # Color de las flechas
style = "lisrel",       # Estilo del diagrama (por ejemplo, LISREL)
nCharNodes = 0,         # Número de caracteres en los nodos (0 para auto)
curvePivot = FALSE,     # Curvar las flechas de acuerdo a las cargas
curve = 1.5,            # Curvatura de las flechas (ajustable)
rotation = 2,           # Rotación del diagrama
layout = "tree",       # Diseño del diagrama
cardinal = "lat cov",   # Información sobre cardinalidad y covarianzas
legend.cex = 0.6,       # Tamaño de la leyenda
label.cex = 0.8,          # Tamaño de etiquetas
label.font = 6,         # Fuente de etiquetas
edge.label.font = 13,   # Fuente de etiquetas en las flechas
asize = 3,              # Tamaño de las flechas
edge.width = 1.2,       # Ancho de las flechas
sizeMan = 2,            # Tamaño de las cajas de variables observadas (largo)
sizeMan2 = 1,           # Tamaño de las cajas de variables observadas (alto)
sizeLat = 2,          # Tamaño de los elipses de factores latentes (largo)
sizeLat2 = 1,          # Tamaño de los elipses de factores latentes (alto)
residScale = 1,        # Escala de los residuos
width = 3,           # Ancho del diagrama
height = 3,            # Alto del diagrama
intercepts = FALSE,     # Mostrar interceptos
reorder = F,         # Reorganizar los nodos
thresholds = FALSE,     # Mostrar umbrales
fixedStyle = 1,         # Estilo fijo
node.height = 4,        # Altura de los nodos (ajustable para aumentar la separación vertical)
node.width = 4,         # Ancho de los nodos
label.scale = T,    # Escala de etiquetas
shapeMan = "rectangle", # Forma de las cajas de variables observadas
shapeLat = "ellipse",   # Forma de los elipses de factores latentes
details = TRUE          # Mostrar detalles en el diagrama
)
ld<- standardizedsolution(mod_conf_cfa) %>% select(lhs,op,rhs,est.std) %>% filter(op=="=~")
ld$est.std<- sprintf("%.2f", ld$est.std)
#install.packages("draw")
library(draw) #para hacer rectangulo de fit
size <- 10
drawText(x = 3, y = 5.5, text = paste0("Estimator: DWLS", "; N=  ",nobs(mod_conf_cfa), "; chi^2(df) = ",fm03[1,],"(",fm03[2,],")","; p= ",fm03[5,],"; CFI=",fm03[3,],"; RMSEA=",fm03[4,]),family = "serif",size = 10)
drawExport("ajuste3.png",units = "cm",width = 18,height = 15,ppi = 300)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 12
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
bbdd_liderazgo_rec= bbdd_liderazgo %>% select(p_58:p_87)
# Chunk 13
modelo_liderazgo <- '
AC =~ p_58 + p_59 + p_60 + p_61 + p_62
PPC =~ p_69 + p_70 + p_71 + p_72 + p_73
CA =~  p_77 + p_78 + p_79 + p_80 + p_81
CR = ~ p_83 + p_84 + p_85 + p_86 + p_87
PPC ~  AC
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_rec %>% na.omit() , ordered=T)
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
bbdd_liderazgo = bbdd_liderazgo %>% mutate( directivo = case_when (
p_15 ==7 | p_15==  8 | p_15 == 6  ~ 1, T ~0
))
table(bbdd_liderazgo$directivo)
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
bbdd_liderazgo = bbdd_liderazgo %>% mutate( directivo = case_when (
p_15 ==7 | p_15==  8 | p_15 == 6  ~ 1, T ~0
))
table(bbdd_liderazgo$p_15)
table(bbdd_liderazgo$p_14)
# Chunk 1: setup
knitr::opts_chunk$set( warning = FALSE,message=FALSE)
# Chunk 2
library(dplyr)
pacman::p_load(dplyr, kableExtra, knitr)
library(tidyverse)
# Chunk 3
library(readxl)
bbdd_liderazgo <- read_excel("Base de datos_Proyecto RED CAP.xlsx")
#View(Base_de_datos_Proyecto_RED_CAP)
# Chunk 4
#bbdd_liderazgo %>% summarytools::dfSummary(labels.col=T,display.labels=T) %>%  summarytools::view(file="coodebock.html")
# Chunk 5
names(bbdd_liderazgo) = paste0("p_",1:143)
#paste0("p_",94:105)
# Chunk 6
#summary(bbdd_liderazgo[,37:93])
#table(bbdd_liderazgo$p_95)
bbdd_liderazgo = bbdd_liderazgo %>% mutate( directivo = case_when (
p_14 =="Equipo de gestión" ~ 1, T ~0
))
table(bbdd_liderazgo$p_14)
# Chunk 9
bbdd_liderazgo_mean=bbdd_liderazgo %>% mutate(
AC = (p_58 + p_59 + p_60 + p_61 + p_62)/5,
PPC = (p_69 + p_70 + p_71 + p_72 + p_73)/5,
CA =  (p_77 + p_78 + p_79 + p_80 + p_81)/5,
CR =  (p_83 + p_84 + p_85 + p_86 + p_87)/5
) %>% select(AC:CR, directivo ) #%>% tidyr::pivot_longer(cols=1:6)
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
# Chunk 10
modelo_liderazgo <- '
PPC ~  AC  + directivo
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_mean %>% na.omit())
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
# Chunk 12
#t.test(bbdd_liderazgo_mean$LC, bbdd_liderazgo_mean$VC)
bbdd_liderazgo_rec= bbdd_liderazgo %>% select(p_58:p_87, directivo )
# Chunk 13
modelo_liderazgo <- '
AC =~ p_58 + p_59 + p_60 + p_61 + p_62
PPC =~ p_69 + p_70 + p_71 + p_72 + p_73
CA =~  p_77 + p_78 + p_79 + p_80 + p_81
CR = ~ p_83 + p_84 + p_85 + p_86 + p_87
PPC ~  AC + directivo
AC~ CA + CR
'
mod_conf_cfa <- lavaan::sem(modelo_liderazgo, data = bbdd_liderazgo_rec %>% na.omit() , ordered=T)
summary(mod_conf_cfa,standardized = TRUE, fit.measures = TRUE, rsquare=T)
table(bbdd_liderazgo$p_14)
